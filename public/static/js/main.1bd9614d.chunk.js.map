{"version":3,"sources":["logo.jpg","components/LaunchItem.js","components/MissionKey.js","components/launches.js","components/Launch.js","App.js","reportWebVitals.js","index.js"],"names":["LaunchItem","launch","flight_number","mission_name","launch_date_local","launch_success","className","classNames","format","to","MissionKey","LAUNCHES_QUERY","gql","Launches","query","loading","error","data","console","log","launches","map","Component","LAUNCH_QUERY","Launch","this","props","match","params","parseInt","variables","launch_year","rocket","rocket_id","rocket_name","rocket_type","client","ApolloClient","uri","App","src","logo","alt","style","width","display","margin","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bd9614d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.9bf807c0.jpg\";","import React from 'react';\nimport classNames from 'classnames';\nimport Moment from 'react-moment';\nimport {Link} from 'react-router-dom';\n\nexport default function LaunchItem({launch: {flight_number, mission_name, launch_date_local, launch_success}}) {\n    return (\n        <div className = \"card card-body mb-3\">\n            <div className = \"row\">\n                <div className = \"col-md-9\">\n                    <h4>Mission: {' '}\n                    <span\n                        className={classNames({\n                        'text-success': launch_success,\n                        'text-danger': !launch_success\n                        })}>\n                         {mission_name} </span> </h4>\n                    <p> Date: <Moment format=\"YYYY-MM-DD HH:mm\">{launch_date_local}</Moment> </p>\n                </div>\n                <div className = \"col-md-3\">\n                    <Link to ={`launch/${flight_number}`} className=\"btn btn-secondary\"> Launch Details</Link>\n                </div>\n\n            </div>           \n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function MissionKey() {\n    return (\n        <div className=\"my-3\">\n            <p>\n                <span className=\"px-3 mr-2 bg-success\" /> = Success\n            </p>\n            <p>\n                <span className=\"px-3 mr-2 bg-danger\" /> = Fail\n            </p>\n    </div>\n    )\n}\n","import React, { Component } from 'react'\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport LaunchItem from './LaunchItem';\nimport MissionKey from './MissionKey';\n\nconst LAUNCHES_QUERY = gql`   \n    query launchesQuery{\n        launches{\n            flight_number,\n            mission_name,\n            launch_date_local,\n            launch_success\n        }\n    }`;\n\nexport default class Launches extends Component {\n    render() {\n        return (\n            <>\n                <h1 className ='display-4 my-3'> Launches </h1>  \n                <MissionKey /> \n                <Query query = {LAUNCHES_QUERY}>\n                    {\n                        ({loading,error,data}) =>{\n                            if(loading) return <h4> Loading ... </h4>\n                            if(error) console.log(error);                      \n                            return(\n                                <> \n                                    {\n                                        data.launches.map(launch=> (\n                                            <LaunchItem key = {launch.flight_number} launch = {launch}/>\n                                        ))\n                                    }\n                                </>);\n                        }\n                    }\n                </Query>         \n            </>\n        )\n    }\n}\n","import React, { Component, Fragment } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst LAUNCH_QUERY = gql`\n  query LaunchQuery($flight_number: Int!) {\n    launch(flight_number: $flight_number) {\n      flight_number\n      mission_name\n      launch_year\n      launch_success\n      launch_date_local\n      rocket {\n        rocket_id\n        rocket_name\n        rocket_type\n      }\n    }\n  }\n`;\n\nexport class Launch extends Component {\n  render() {\n    let { flight_number } = this.props.match.params;\n    flight_number = parseInt(flight_number);\n    return (\n      <Fragment>\n        <Query query={LAUNCH_QUERY} variables={{ flight_number }}>\n          {({ loading, error, data }) => {\n            if (loading) return <h4>Loading...</h4>;\n            if (error) console.log(error);\n\n            const {\n              mission_name,\n              flight_number,\n              launch_year,\n              launch_success,\n              rocket: { rocket_id, rocket_name, rocket_type }\n            } = data.launch;\n\n            return (\n              <div>\n                <h1 className=\"display-4 my-3\">\n                  <span className=\"text-dark\">Mission:</span> {mission_name}\n                </h1>\n                <h4 className=\"mb-3\">Launch Details</h4>\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">\n                    Flight Number: {flight_number}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Launch Year: {launch_year}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Launch Successful:{' '}\n                    <span\n                      className={classNames({\n                        'text-success': launch_success,\n                        'text-danger': !launch_success\n                      })}\n                    >\n                      {launch_success ? 'Yes' : 'No'}\n                    </span>\n                  </li>\n                </ul>\n\n                <h4 className=\"my-3\">Rocket Details</h4>\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Rocket ID: {rocket_id}</li>\n                  <li className=\"list-group-item\">\n                    Rocket Name: {rocket_name}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Rocket Type: {rocket_type}\n                  </li>\n                </ul>\n                <hr />\n                <Link to=\"/\" className=\"btn btn-secondary\">\n                  Back\n                </Link>\n              </div>\n            );\n          }}\n        </Query>\n      </Fragment>\n    );\n  }\n}\n\nexport default Launch;","import './App.css';\nimport React from 'react';\nimport ApolloClient from 'apollo-boost';\nimport {ApolloProvider} from 'react-apollo';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport logo from './logo.jpg';\nimport Launches from './components/launches';\nimport Launch from './components/Launch';\n\nconst client =  new ApolloClient({\n    uri: '/graphql'\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client = {client}>\n      <Router>\n        <div className=\"container\">\n            <img src = {logo} alt='SpaceX' style={{width:300, display: 'block', margin:'auto'}}></img>\n            <Route exact path = '/' component = {Launches} />\n            <Route exact path = '/launch/:flight_number' component = {Launch} />\n        </div>\n        </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}